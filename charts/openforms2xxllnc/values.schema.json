{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template",
            "default": ""
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Frank!Framework image registry",
                    "default": "wearefrank"
                },
                "repository": {
                    "type": "string",
                    "description": "Frank!Framework image repository",
                    "default": "openforms2xxllnc"
                },
                "tag": {
                    "type": "string",
                    "description": "Frank!Framework image tag (immutable tags are recommended)",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Frank!Framework image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Frank!Framework image pull secrets",
                    "default": [],
                    "items": {}
                }
            }
        },
        "frank": {
            "type": "object",
            "properties": {
                "memory": {
                    "type": "object",
                    "properties": {
                        "percentage": {
                            "type": "boolean",
                            "description": "Set if the values for the memory are in percentages",
                            "default": false
                        },
                        "minimum": {
                            "type": "string",
                            "description": "Sets the initial size of the heap that will be used by the Frank!Framework",
                            "default": "1G"
                        },
                        "maximum": {
                            "type": "string",
                            "description": "Sets the maximum size of the heap that will be used by the Frank!Framework",
                            "default": "1G"
                        }
                    }
                },
                "dtap": {
                    "type": "object",
                    "properties": {
                        "stage": {
                            "type": "string",
                            "description": "(Required) Set the `DTAP` stage. Options: `LOC`, `DEV`, `TST`, `ACC`, `PRD`",
                            "default": ""
                        },
                        "side": {
                            "type": "string",
                            "description": "Set the `DTAP` side of where the instance is running",
                            "default": ""
                        }
                    }
                },
                "credentials": {
                    "type": "object",
                    "properties": {
                        "secret": {
                            "type": "string",
                            "description": "Set the secret name of the existing secret",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Set the key inside the secret that contains the data (e.g. `credentials.properties`)",
                            "default": ""
                        }
                    }
                },
                "instance": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Set the name of the Frank! instance (default is the `fullname`)",
                            "default": ""
                        }
                    }
                },
                "configurations": {
                    "type": "object",
                    "properties": {
                        "names": {
                            "type": "array",
                            "description": "Set the configurations to load. Leave empty to use the default",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "security": {
                    "type": "object",
                    "properties": {
                        "certificateStores": {
                            "type": "array",
                            "description": "Define certificate (key/trust) stores to mount in the resources folder of the Frank!",
                            "default": [],
                            "items": {}
                        },
                        "http": {
                            "type": "object",
                            "properties": {
                                "authentication": {
                                    "type": "boolean",
                                    "description": "Set http authentication for the Frank!",
                                    "default": false
                                },
                                "localUsers": {
                                    "type": "array",
                                    "description": "Set localUsers who can log in on the Frank!",
                                    "default": [],
                                    "items": {}
                                },
                                "activeDirectory": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable Active Directory for authentication",
                                            "default": false
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "Set url for Active Directory",
                                            "default": ""
                                        },
                                        "baseDn": {
                                            "type": "string",
                                            "description": "Set baseDn for Active Directory users",
                                            "default": ""
                                        },
                                        "roleMapping": {
                                            "type": "object",
                                            "properties": {
                                                "tester": {
                                                    "type": "string",
                                                    "description": "Map the role for Tester",
                                                    "default": ""
                                                },
                                                "dataAdmin": {
                                                    "type": "string",
                                                    "description": "Map the role for DataAdmin",
                                                    "default": ""
                                                },
                                                "admin": {
                                                    "type": "string",
                                                    "description": "Map the role for Admin",
                                                    "default": ""
                                                },
                                                "webService": {
                                                    "type": "string",
                                                    "description": "Map the role for WebService",
                                                    "default": ""
                                                },
                                                "observer": {
                                                    "type": "string",
                                                    "description": "Map the role for Observer",
                                                    "default": ""
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "server": {
                    "type": "object",
                    "properties": {
                        "transactionManager": {
                            "type": "string",
                            "description": "Set the transaction manager for Tomcat. Options: `NARAYANA`, `BTM`, ``",
                            "default": "NARAYANA"
                        }
                    }
                },
                "javaOpts": {
                    "type": "string",
                    "description": "Append custom options to the `JAVA_OPTS` environment variable for the Frank!",
                    "default": ""
                }
            }
        },
        "connections": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Create a `context.xml` and possibly overwrite the existing one, to configure the connections/resources.",
                    "default": true
                },
                "jdbc": {
                    "type": "array",
                    "description": "Set multiple database connections. One connection should have an empty name, so it'll get picked up by default (unless `jdbc.required=false` is set)",
                    "default": [],
                    "items": {}
                },
                "jms": {
                    "type": "array",
                    "description": "Set multiple message services",
                    "default": [],
                    "items": {}
                }
            }
        },
        "autoscaling": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "",
                    "default": false
                },
                "minReplicas": {
                    "type": "number",
                    "description": "",
                    "default": 1
                },
                "maxReplicas": {
                    "type": "number",
                    "description": "",
                    "default": 100
                },
                "targetCPUUtilizationPercentage": {
                    "type": "number",
                    "description": "",
                    "default": 80
                },
                "targetMemoryUtilizationPercentage": {
                    "type": "number",
                    "description": "",
                    "default": 80
                }
            }
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of Frank!Framework replicas to deploy",
            "default": 1
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 40
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 12
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "hosts": {
                    "type": "array",
                    "description": "",
                    "items": {
                        "type": "object",
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": ""
                            },
                            "paths": {
                                "type": "array",
                                "description": "",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": ""
                                        },
                                        "pathType": {
                                            "type": "string",
                                            "description": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress record generation for Frank!",
                    "default": false
                },
                "className": {
                    "type": "string",
                    "description": "IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "array",
                    "description": "Define tls secrets for hosts (implementation not done yet)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 0
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 12
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 0
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 3
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "terminationGracePeriodSeconds": {
            "type": "number",
            "description": "Number of seconds after which pods are forcefully killed",
            "default": 60
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Set tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "affinity": {
            "type": "object",
            "description": "Set affinity for pod assignment",
            "default": {}
        },
        "timeZone": {
            "type": "string",
            "description": "used for database connection and log timestamps",
            "default": "Etc/UTC"
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Frank!Framework service type",
                    "default": "ClusterIP"
                },
                "port": {
                    "type": "number",
                    "description": "Frank!Framework service port",
                    "default": 80
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable creation of ServiceAccount for Frank!Framework pod",
                    "default": true
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for the ServiceAccount",
                    "default": {}
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ServiceAccount to use.",
                    "default": ""
                }
            }
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for Frank!Framework pods",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for Frank!Framework pods",
            "default": {}
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable persistence using Persistent Volume Claims",
                    "default": false
                },
                "storageClass": {
                    "type": "string",
                    "description": "Persistent Volume storage class",
                    "default": ""
                },
                "accessModes": {
                    "type": "array",
                    "description": "Persistent Volume access modes",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "Persistent Volume size",
                    "default": "5Gi"
                },
                "dataSource": {
                    "type": "object",
                    "description": "Custom PVC data source",
                    "default": {}
                },
                "existingClaim": {
                    "type": "string",
                    "description": "The name of an existing PVC to use for persistence",
                    "default": ""
                },
                "selector": {
                    "type": "object",
                    "description": "Selector to match an existing Persistent Volume for the Frank!Framework's data PVC",
                    "default": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Persistent Volume Claim annotations",
                    "default": {}
                }
            }
        },
        "openforms2xxllnc": {
            "type": "object",
            "properties": {
                "connections": {
                    "type": "object",
                    "properties": {
                        "beantwoordVraag": {
                            "type": "object",
                            "properties": {
                                "endpoint": {
                                    "type": "string",
                                    "description": "Endpoint at which the zs-dms BeantwoordVraag binding is served.",
                                    "default": "https://zs-dms/generic/zds/BeantwoordVraag"
                                },
                                "timeout": {
                                    "type": "number",
                                    "description": "Timeout used zs-dms BeantwoordVraag calls.",
                                    "default": 60000
                                },
                                "authAlias": {
                                    "type": "string",
                                    "description": "Reference to an auth alias to be used as credentials for communication with this endpoint.",
                                    "default": "zaakdms-api"
                                },
                                "authHeaderName": {
                                    "type": "string",
                                    "description": "Name of the HTTP request header to provide authentication credentials in.",
                                    "default": "Authorization"
                                }
                            }
                        },
                        "ontvangAsynchroon": {
                            "type": "object",
                            "properties": {
                                "endpoint": {
                                    "type": "string",
                                    "description": "Endpoint at which the zs-dms OntvangAsynchroon binding is served.",
                                    "default": "https://zs-dms/generic/zds/OntvangAsynchroon"
                                },
                                "timeout": {
                                    "type": "number",
                                    "description": "Timeout used zs-dms OntvangAsynchroon calls.",
                                    "default": 60000
                                },
                                "authAlias": {
                                    "type": "string",
                                    "description": "Reference to an auth alias to be used as credentials for communication with this endpoint.",
                                    "default": "zaakdms-api"
                                },
                                "authHeaderName": {
                                    "type": "string",
                                    "description": "Name of the HTTP request header to provide authentication credentials in.",
                                    "default": "Authorization"
                                }
                            }
                        },
                        "vrijeBerichten": {
                            "type": "object",
                            "properties": {
                                "endpoint": {
                                    "type": "string",
                                    "description": "Endpoint at which the zs-dms VrijBericht binding is served.",
                                    "default": "https://zs-dms/generic/zds/VrijBericht"
                                },
                                "timeout": {
                                    "type": "number",
                                    "description": "Timeout used zs-dms VrijBericht calls.",
                                    "default": 60000
                                },
                                "authAlias": {
                                    "type": "string",
                                    "description": "Reference to an auth alias to be used as credentials for communication with this endpoint.",
                                    "default": "zaakdms-api"
                                },
                                "authHeaderName": {
                                    "type": "string",
                                    "description": "Name of the HTTP request header to provide authentication credentials in.",
                                    "default": "Authorization"
                                }
                            }
                        },
                        "notificatiesApi": {
                            "type": "object",
                            "properties": {
                                "rootUrl": {
                                    "type": "string",
                                    "description": "Root url of the 'Notificaties API' that is used to subscribe at.",
                                    "default": "https://notificaties-api/api/v1/"
                                },
                                "timeout": {
                                    "type": "number",
                                    "description": "Timeout used in 'Notificaties API' calls.",
                                    "default": 60000
                                },
                                "authType": {
                                    "type": "string",
                                    "description": "Options: 'jwt', 'basic', 'value'. 'value' uses the password field of the given authAlias as Authorization header.",
                                    "default": "jwt"
                                },
                                "authAlias": {
                                    "type": "string",
                                    "description": "Reference to an auth alias to be used as credentials for this api.",
                                    "default": "notificaties-api"
                                },
                                "subscription": {
                                    "type": "object",
                                    "properties": {
                                        "callback": {
                                            "type": "string",
                                            "description": "Fully qualified url to the notification callback of openforms2xxllnc.",
                                            "default": "https://openforms2xxllnc/api/v1/form-object-callback"
                                        },
                                        "authAlias": {
                                            "type": "string",
                                            "description": "Reference to an auth alias to be used as authorization key for calling the callback endpoint.",
                                            "default": "forms-object-callback"
                                        },
                                        "filters": {
                                            "type": "object",
                                            "properties": {
                                                "objectType": {
                                                    "type": "string",
                                                    "description": "Url of the objecttype to filter the notifications on.",
                                                    "default": "https://objecttypes-api/api/v2/objecttypes/uuid"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "documentenApi": {
                            "type": "object",
                            "properties": {
                                "timeout": {
                                    "type": "number",
                                    "description": "Timeout used in 'Documenten API' calls.",
                                    "default": 60000
                                },
                                "authType": {
                                    "type": "string",
                                    "description": "Options: 'jwt', 'basic', 'value'. 'value' uses the password field of the given authAlias as Authorization header.",
                                    "default": "jwt"
                                },
                                "authAlias": {
                                    "type": "string",
                                    "description": "Reference to an auth alias to be used as credentials for this api.",
                                    "default": "documenten-api"
                                }
                            }
                        },
                        "objectsApi": {
                            "type": "object",
                            "properties": {
                                "timeout": {
                                    "type": "number",
                                    "description": "Timeout used in 'Objects API' calls.",
                                    "default": 60000
                                },
                                "authType": {
                                    "type": "string",
                                    "description": "Options: 'jwt', 'basic', 'value'. 'value' uses the password field of the given authAlias as Authorization header.",
                                    "default": "value"
                                },
                                "authAlias": {
                                    "type": "string",
                                    "description": "Reference to an auth alias to be used as credentials for this api.",
                                    "default": "objects-api"
                                }
                            }
                        },
                        "noReplySmtp": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable connecting to the configured SMTP server/replay.",
                                    "default": false
                                },
                                "host": {
                                    "type": "string",
                                    "description": "Host of the SMTP server/relay.",
                                    "default": "https://smtp-relay/"
                                },
                                "port": {
                                    "type": "number",
                                    "description": "Port of the SMTP server/relay.",
                                    "default": 587
                                },
                                "useSsl": {
                                    "type": "boolean",
                                    "description": "Connect securely to the SMTP server/relay with SSL.",
                                    "default": true
                                },
                                "authAlias": {
                                    "type": "string",
                                    "description": "Reference to an auth alias to be used as credentials for authorizing with the SMTP server/relay.",
                                    "default": "noreply-smtp"
                                },
                                "defaultFromName": {
                                    "type": "string",
                                    "description": "The default no-reply sender's name that is shown with the no-reply sender's e-mail address.",
                                    "default": "Gemeente X"
                                },
                                "defaultFromAddress": {
                                    "type": "string",
                                    "description": "The default no-reply sender's e-mail address that used when sending e-mails.",
                                    "default": "no-reply@gemeente-x.local"
                                },
                                "signatureFromName": {
                                    "type": "string",
                                    "description": "The no-reply sender's name used in the signature of the e-mail body.",
                                    "default": ""
                                },
                                "timeout": {
                                    "type": "number",
                                    "description": "Timeout used when sending emails.",
                                    "default": 60000
                                }
                            }
                        }
                    }
                },
                "mailTemplates": {
                    "type": "object",
                    "properties": {
                        "existingConfigMap": {
                            "type": "string",
                            "description": "The name of the configmap containing the mail templates.",
                            "default": ""
                        },
                        "templates": {
                            "type": "array",
                            "description": "Mail templates that can be referenced by name on a variety of functional error scenario's.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "workflows": {
                    "type": "object",
                    "properties": {
                        "stuurgegevens": {
                            "type": "object",
                            "properties": {
                                "zender": {
                                    "type": "object",
                                    "properties": {
                                        "organisatie": {
                                            "type": "string",
                                            "description": "Gemeentecode of the gemeente sending the zs-dms requests.",
                                            "default": "1111"
                                        },
                                        "applicatie": {
                                            "type": "string",
                                            "description": "Application name used when sending the zs-dms requests.",
                                            "default": ""
                                        }
                                    }
                                },
                                "ontvanger": {
                                    "type": "object",
                                    "properties": {
                                        "organisatie": {
                                            "type": "string",
                                            "description": "Gemeentecode of the gemeente receiving the zs-dms requests.",
                                            "default": "1111"
                                        },
                                        "applicatie": {
                                            "type": "string",
                                            "description": "Application name of the receiving zs-dms application.",
                                            "default": "zs-dms"
                                        }
                                    }
                                }
                            }
                        },
                        "autoRetries": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable automatic retries. For all workflows(unless overriden).",
                                    "default": true
                                },
                                "cronExpression": {
                                    "type": "string",
                                    "description": "Cron expression used for retry interval/schedule. For all workflows(unless overriden).",
                                    "default": "0 0/30 * * * ?"
                                },
                                "maxRetries": {
                                    "type": "number",
                                    "description": "Maximum amount an errorstore item is retried. For all workflows(unless overriden).",
                                    "default": 5
                                },
                                "workflowSelector": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable automatic retries. Override for this specific workflow.",
                                            "default": true
                                        },
                                        "cronExpression": {
                                            "type": "string",
                                            "description": "Cron expression used for retry interval/schedule. Override for this specific workflow.",
                                            "default": "0 0/30 * * * ?"
                                        },
                                        "maxRetries": {
                                            "type": "number",
                                            "description": "Maximum amount an errorstore item is retried. Override for this specific workflow.",
                                            "default": 5
                                        }
                                    }
                                },
                                "addDocumentsToCase": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable automatic retries. Override for this specific workflow.",
                                            "default": true
                                        },
                                        "cronExpression": {
                                            "type": "string",
                                            "description": "Cron expression used for retry interval/schedule. Override for this specific workflow.",
                                            "default": "0 0/30 * * * ?"
                                        },
                                        "maxRetries": {
                                            "type": "number",
                                            "description": "Maximum amount an errorstore item is retried. Override for this specific workflow.",
                                            "default": 5
                                        }
                                    }
                                },
                                "sendNoReplyUserEmail": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable automatic retries. Override for this specific workflow.",
                                            "default": true
                                        },
                                        "cronExpression": {
                                            "type": "string",
                                            "description": "Cron expression used for retry interval/schedule. Override for this specific workflow.",
                                            "default": "0 0/30 * * * ?"
                                        },
                                        "maxRetries": {
                                            "type": "number",
                                            "description": "Maximum amount an errorstore item is retried. Override for this specific workflow.",
                                            "default": 5
                                        }
                                    }
                                }
                            }
                        },
                        "scheduledStartReceiver": {
                            "type": "object",
                            "properties": {
                                "workflowSelector": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable scheduled start the receiver of this specific workflow.",
                                            "default": false
                                        },
                                        "cronExpression": {
                                            "type": "string",
                                            "description": "Cron expression used to schedule starting the receiver of this specific workflow.",
                                            "default": "0 * 5 * * ?"
                                        }
                                    }
                                }
                            }
                        },
                        "scheduledStopReceiver": {
                            "type": "object",
                            "properties": {
                                "workflowSelector": {
                                    "type": "object",
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "description": "Enable scheduled stop the receiver of this specific workflow.",
                                            "default": false
                                        },
                                        "cronExpression": {
                                            "type": "string",
                                            "description": "Cron expression used to schedule stopping the receiver of this specific workflow.",
                                            "default": "0 * 0 * * ?"
                                        }
                                    }
                                }
                            }
                        },
                        "onErrorActions": {
                            "type": "object",
                            "properties": {
                                "onCaseNotFound": {
                                    "type": "object",
                                    "properties": {
                                        "sendMail": {
                                            "type": "boolean",
                                            "description": "Enable sending a mail to the form initiator when this specific error occurs.",
                                            "default": false
                                        },
                                        "templateName": {
                                            "type": "string",
                                            "description": "Name of the mail template to be used when this specific error occurs.",
                                            "default": ""
                                        }
                                    }
                                },
                                "onSubjectNotEqualsCaseSubject": {
                                    "type": "object",
                                    "properties": {
                                        "sendMail": {
                                            "type": "boolean",
                                            "description": "Enable sending a mail to the form initiator when this specific error occurs.",
                                            "default": false
                                        },
                                        "templateName": {
                                            "type": "string",
                                            "description": "Name of the mail template to be used when this specific error occurs.",
                                            "default": ""
                                        }
                                    }
                                },
                                "onCaseClosed": {
                                    "type": "object",
                                    "properties": {
                                        "sendMail": {
                                            "type": "boolean",
                                            "description": "Enable sending a mail to the form initiator when this specific error occurs.",
                                            "default": false
                                        },
                                        "templateName": {
                                            "type": "string",
                                            "description": "Name of the mail template to be used when this specific error occurs.",
                                            "default": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}