## @section Common parameters
##

## @param nameOverride String to partially override ff-common.fullname template (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override ff-common.fullname template
##
fullnameOverride: ""

## @section Frank!Framework image parameters
##

## Frank!Framework image
## ref: https://nexus.frankframework.org/#browse/browse:frankframework-docker:v2%2Ffrankframework%2Ftags/
## @param image.registry Frank!Framework image registry
## @param image.repository Frank!Framework image repository
## @param image.tag Frank!Framework image tag (immutable tags are recommended)
##
image:
  registry: wearefrank
  repository: zaakbrug
  tag: ""
  ## @param image.pullPolicy Frank!Framework image pull policy
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## @param image.pullSecrets Frank!Framework image pull secrets
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - name: myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Frank! Configuration parameters
##

## @skip frank [object]
##
frank:
  ## @param frank.memory.percentage Set if the values for the memory are in percentages
  ## @param frank.memory.minimum Sets the initial size of the heap that will be used by the Frank!Framework
  ## @param frank.memory.maximum Sets the maximum size of the heap that will be used by the Frank!Framework
  ## For Java 8 it is best suited to use the same amount of memory for both the minimum and maximum.
  ## For Java 11 and above, it is possible to use percentages. E.g. minimum: 20.0, maximum: 80.0.
  ## ref: https://docs.oracle.com/javase/8/docs/technotes/tools/unix/java.html#BABDJJFI
  ##
  memory:
    percentage: false
    minimum: 4G
    maximum: 4G
  ## @skip frank.dtap [object]
  ## @param frank.dtap.stage (Required) Set the `DTAP` stage. Options: `LOC`, `DEV`, `TST`, `ACC`, `PRD`
  ## @param frank.dtap.side Set the `DTAP` side of where the instance is running
  ##
  dtap:
    stage: ""
    side: ""
  ## @skip frank.credentials [object]
  ## @param frank.credentials.secret Set the secret name of the existing secret
  ## @param frank.credentials.key Set the key inside the secret that contains the data (e.g. `credentials.properties`)
  ##
  credentials:
    secret: ""
    key: ""
  ## @skip frank.instance [string]
  ## @param frank.instance.name Set the name of the Frank! instance (default is the `fullname`)
  ##
  instance:
    name: ""
  ## @skip frank.configurations [object]
  ## @param frank.configurations.names [array] Set the configurations to load. Leave empty to use the default
  ## e.g.
  ## configurations.names:
  ##   - main
  ##
  configurations:
    names: []
  ## @skip frank.security [object]
  ## @skip frank.security.http [object]
  ##
  security:
    ## @param frank.security.certificateStores [array] Define certificate (key/trust) stores to mount in the resources folder of the Frank!
    ## @param frank.security.certificateStores.secretName [string] Name of the secret where the certificate store is located in
    ## @param frank.security.certificateStores.key [string] The key in the secret where the certificate store is located in
    ## @param frank.security.certificateStores.resourceUrl [string, nullable] The path to the certificate store in the Resource folder, the key will be used as default value
    ##
    certificateStores: []
    http:
      ## @param frank.security.http.authentication Set http authentication for the Frank!
      ##
      authentication: false
      ## @param frank.security.http.localUsers [array] Set localUsers who can log in on the Frank!
      ## @param frank.security.http.localUsers.username [string] Set the username of the user
      ## @param frank.security.http.localUsers.password [string] Set the password of the user
      ## @param frank.security.http.localUsers.roles [array] Set the roles of the user. Options: `IbisTester`, `IbisDataAdmin`, `IbisAdmin`, `IbisWebService`, `IbisObserver`
      ## e.g.
      ## localUsers:
      ##   - username: Tester
      ##     password: ChangeMe!
      ##     roles:
      ##        - IbisTester
      ##
      localUsers: []
      ## @param frank.security.http.localUsersExistingSecret [string, nullable] The name of the existing secret, containing the 'tomcat-users.xml' and 'localUsers.yml' files.
      ## e.g.
      ## localUsersExistingSecret: >- 
      ##   {{ template "ff-common.fullname" . }}-my-own-tomcat-users
      ##
      localUsersExistingSecret: ""
      ## @skip frank.security.http.activeDirectory [object]
      ## @param frank.security.http.activeDirectory.enabled Enable Active Directory for authentication
      ## @param frank.security.http.activeDirectory.url Set url for Active Directory
      ## @param frank.security.http.activeDirectory.baseDn Set baseDn for Active Directory users
      ## @skip frank.security.http.activeDirectory.roleMapping [object]
      ## @param frank.security.http.activeDirectory.roleMapping.tester Map the rol for Tester
      ## @param frank.security.http.activeDirectory.roleMapping.dataAdmin Map the rol for DataAdmin
      ## @param frank.security.http.activeDirectory.roleMapping.admin Map the rol for Admin
      ## @param frank.security.http.activeDirectory.roleMapping.webService Map the rol for WebService
      ## @param frank.security.http.activeDirectory.roleMapping.observer Map the rol for Observer
      ##
      activeDirectory:
        enabled: false
        url: ""
        baseDn: ""
        roleMapping:
          tester: ""
          dataAdmin: ""
          admin: ""
          webService: ""
          observer: ""
  ## @skip frank.server [object]
  ##
  server:
    ## @param frank.server.transactionManager [string] Set the transaction manager for Tomcat. Options: `NARAYANA`, `BTM`, ``
    ##
    transactionManager: NARAYANA
  ## @param frank.environmentVariables [object] Set extra environment variables for the Frank!
  ##
  environmentVariables: {}
  ## @param frank.javaOpts [string] Append custom options to the `JAVA_OPTS` environment variable for the Frank!
  ##
  javaOpts: ""

## @section Frank!Framework Connection parameters
##

## @skip connections [object]
##
connections:
  ## @param connections.create Create a `context.xml` and possibly overwrite the existing one, to configure the connections/resources.
  ##
  create: true
  ## @param connections.jdbc [array] Set multiple database connections. One connection should have an empty name, so it'll get picked up by default (unless `jdbc.required=false` is set)
  ## @param connections.jdbc.name [nullable,string] Name of the connection (leave empty to use default: `jdbc/${.Values.instance.name}` in lowercase)
  ## @param connections.jdbc.type [string] DBMS type. Options: `oracle`, `mssql`, `mysql`, `mariadb`, `postgresql`, `db2`, `mongodb`
  ## @param connections.jdbc.host [string] Host of where the database can be reached (like in the same cluster e.g. `<service>.<namespace>.svc.cluster.local`)
  ## @param connections.jdbc.post [nullable,string] Port for the database (leave empty for default)
  ## @param connections.jdbc.database [nullable,string] Name of the database to use (default is `.Values.instance.name`)
  ## @param connections.jdbc.username [string] Username to connect to the database (or use string template for use with credentials e.g. `${database/username}`)
  ## @param connections.jdbc.password [string] Password to connect to the database (or use string template for use with credentials e.g. `${database/password}`)
  ## @param connections.jdbc.ssl [nullable,string] Set to `true` is the connection uses SSL, default is `false`
  ##
  jdbc: []
  ## @param connections.jms [array] Set multiple massage services
  ## @param connections.jms.name [nullable,string] Name of the connection (leave empty to use default: `jms/${.Values.instance.name}` in lowercase)
  ## @param connections.jms.type [string] MQ type. Options: `artemis`, `activemq`
  ## @param connections.jms.host [string] Host of where the MQ can be reached (like in the same cluster e.g. `<service>.<namespace>.svc.cluster.local`)
  ## @param connections.jms.post [nullable,string] Port for the MQ (leave empty for default)
  ##
  jms: []

## @section Frank!Framework deployment parameters
## @descriptionStart
## The startup probe will enable blue-green deployment, which are great for uptime during upgrades and such.
## It (and the liveness probe) will check if the console is accessible, until a better health endpoint is available.
## The readiness probe will check if all adapters are running using the server health endpoint
## @descriptionEnd
##

## @param replicaCount Number of Frank!Framework replicas to deploy
## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
##
replicaCount: 1

## Configure extra options for Frank!Framework containers' startup probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  initialDelaySeconds: 40
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 12
  successThreshold: 1

## Configure extra options for Frank!Framework containers' liveness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 12
  successThreshold: 1

## Configure extra options for Frank!Framework containers' readiness probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  initialDelaySeconds: 0
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

## @param probesEnabled [object] Toggle probes. This should only be used if a Frank! needs to be kept while in a bad state (for debugging purposes)
## @param probesEnabled.startupProbe [object] Toggle startupProbe
## @param probesEnabled.livenessProbe [object] Toggle livenessProbe
## @param probesEnabled.readinessProbe [object] Toggle readinessProbe
probesEnabled:
  startupProbe: true
  livenessProbe: true
  readinessProbe: true

## Frank!Framework container's resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## @param resources [object] Set the resources for the Frank!Framework containers
## @param resources.limits [string] The resources limits for the Frank!Framework containers
## @param resources.requests.memory [string] The requested memory for the Frank!Framework containers
## @param resources.requests.cpu [string] The requested cpu for the Frank!Framework containers
## e.g.:
## resources
##   limits:
##     cpu: 2000m
##     memory: 4200M
##   requests:
##     cpu: 2000m
##     memory: 4200M
##
resources: {}

## @skip autoscaling
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

## @param terminationGracePeriodSeconds Number of seconds after which pods are forcefully killed
## @extra terminationGracePeriodSeconds Note: Lower values may cause running adapters to fail
terminationGracePeriodSeconds: 60

## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Set tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Set affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}

## @param timeZone used for database connection and log timestamps
##
timeZone: Etc/UTC

## @section Traffic Exposure Parameters
##

## Frank!Framework service parameters
##
service:
  ## @param service.type Frank!Framework service type
  ##
  type: ClusterIP
  ## @param service.port Frank!Framework service port
  port: 80

## Configure the ingress resource that allows you to access the Frank!Framework installation
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Frank!
  ##
  enabled: false
  ## @param ingress.className IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  className: ""
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   kubernetes.io/tls-acme: 'true'
  ##
  annotations: {}
  ## @param ingress.hosts [array] Set hosts for ingress
  ## @param ingress.hosts.host [string] Set hostname
  ## @param ingress.hosts.paths [array] Set multiple paths
  ## @param ingress.hosts.paths.path [string] Set path (context url)
  ## @param ingress.hosts.paths.pathType [string] Set type of path
  ##
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  ## @param ingress.tls [array] Define tls secrets for hosts (implementation not done yet)
  ## e.g.
  ## tls:
  ##   - secretName: chart-example-tls
  ##     hosts:
  ##       - chart-example.local
  ##
  tls: []

## @section Other Parameters
##

## Frank!Framework Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount for Frank!Framework pod
  ##
  create: true
  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
  ##
  annotations: {}
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the ff-common.fullname template
  ##
  name: ""

## @param podAnnotations Annotations for Frank!Framework pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## @param podLabels Extra labels for Frank!Framework pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}

## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext [object] Set Frank!Framework pod's Security Context
##
podSecurityContext: {}

## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param securityContext [object] Set Frank!Framework container's Security Context
## e.g.
## securityContext: {}
##  capabilities:
##    drop:
##      - ALL
##  readOnlyRootFilesystem: true
##  runAsNonRoot: true
##  runAsUser: 1000
##
securityContext: {}

## @section Persistence
## @descriptionStart
## Persistence is used for keeping heap dumps. They can be found at `/heap-dumps` with persistence enabled.
## Otherwise, they can be found at `/usr/local/tomcat/logs`
## @descriptionEnd
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: false
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: ""
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Persistent Volume size
  ##
  size: 5Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
  ## @param persistence.selector Selector to match an existing Persistent Volume for the Frank!Framework's data PVC
  ## If set, the PVC can't have a PV dynamically provisioned for it
  ## E.g.
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}
  ## @param persistence.annotations Persistent Volume Claim annotations
  ## You might need to add an annotation for selected node:
  ## E.g: volume.kubernetes.io/selected-node: nodeName
  ## Ref: https://kubernetes.io/docs/reference/labels-annotations-taints/#volume-kubernetes-io-selected-node
  ##
  annotations: {}

## @section ZaakBrug
## @descriptionStart
## Following sections are about the configuration for the ZaakBrug
## @descriptionEnd
##

zaakbrug:
  ## @param zaakbrug.zds.timezone The timezone of the receiving zds service
  ##
  zds:
    timezone: Etc/UTC
  ## @param zaakbrug.soap.beantwoordVraag.endpoint Set the endpoint the service should be available at
  ## @param zaakbrug.soap.beantwoordVraag.validationSoftFail Incoming messages are validated, if set to `true` the message still gets processed if it fails
  ## @param zaakbrug.soap.beantwoordVraag_v2.endpoint Set the endpoint the service should be available at
  ## @param zaakbrug.soap.beantwoordVraag_v2.validationSoftFail Incoming messages are validated, if set to `true` the message still gets processed if it fails
  ## @param zaakbrug.soap.ontvangAsynchroon.endpoint Set the endpoint the service should be available at
  ## @param zaakbrug.soap.ontvangAsynchroon.validationSoftFail Incoming messages are validated, if set to `true` the message still gets processed if it fails
  ## @param zaakbrug.soap.ontvangAsynchroonMutatie_v2.endpoint Set the endpoint the service should be available at
  ## @param zaakbrug.soap.ontvangAsynchroonMutatie_v2.validationSoftFail Incoming messages are validated, if set to `true` the message still gets processed if it fails
  ## @param zaakbrug.soap.ontvangAsynchroonOverdragen_v2.endpoint Set the endpoint the service should be available at
  ## @param zaakbrug.soap.ontvangAsynchroonOverdragen_v2.validationSoftFail Incoming messages are validated, if set to `true` the message still gets processed if it fails
  ## @param zaakbrug.soap.vrijeBerichten.endpoint Set the endpoint the service should be available at
  ## @param zaakbrug.soap.vrijeBerichten.validationSoftFail Incoming messages are validated, if set to `true` the message still gets processed if it fails
  ## @param zaakbrug.soap.vrijeBerichten_v2.endpoint Set the endpoint the service should be available at
  ## @param zaakbrug.soap.vrijeBerichten_v2.validationSoftFail Incoming messages are validated, if set to `true` the message still gets processed if it fails
  ##
  soap:
    beantwoordVraag:
      endpoint: "translate/generic/zds/BeantwoordVraag"
      validationSoftFail: false
    beantwoordVraag_v2:
      endpoint: "translate/generic/zds/v2/BeantwoordVraag"
      validationSoftFail: false
    ontvangAsynchroon:
      endpoint: "translate/generic/zds/OntvangAsynchroon"
      validationSoftFail: false
    ontvangAsynchroonMutatie_v2:
      endpoint: "translate/generic/zds/v2/OntvangAsynchroonMutatie"
      validationSoftFail: false
    ontvangAsynchroonOverdragen_v2:
      endpoint: "translate/generic/zds/v2/OntvangAsynchroonOverdragen"
      validationSoftFail: false
    vrijeBerichten:
      endpoint: "translate/generic/zds/VrijBericht"
      validationSoftFail: false
    vrijeBerichten_v2:
      endpoint: "translate/generic/zds/v2/VrijBericht"
      validationSoftFail: false
  zgw:
    ## @section Identificatie Templates
    ## @descriptionStart
    ## Templates used for generating zaak- and documentidentificatie<br/>
    ## The syntax for variable substitution is as follows {[variable-name][:formatting-string]}
    ##
    ## Variables:
    ## - id          Auto-incrementing identifier with 'D' as formatting option, indicating the amount of digits.
    ##               example: {id:D5} with id-123 will result in '00123'
    ## - datetime    The current date and time with '[Y' as formatting option, according to
    ##               (https://www.oreilly.com/library/view/xslt-2nd-edition/9780596527211/ch04s05.html).
    ##               Only the '[Y0001]' is currently implemented
    ##               example: {datetime:[Y001]} with datetime=14-03-2023 produces '2023'
    ## @descriptionEnd
    ##
    ## @param zaakbrug.zgw.zaakIdentificatieTemplate Template for zaakidentificatie
    ## @param zaakbrug.zgw.documentIdentificatieTemplate Template for documentidentificatie
    ## @param zaakbrug.zgw.besluitIdentificatieTemplate Template for besluitidentificatie
    zaakIdentificatieTemplate: ZK{datetime:[Y0001]}-{id:D5}
    documentIdentificatieTemplate: DC{datetime:[Y0001]}-{id:D5}
    besluitIdentificatieTemplate: BS{datetime:[Y0001]}-{id:D5}
    ## @section Api Endpoints
    ## @descriptionStart
    ## Make sure that all Url's contain two "parts" e.g. `openzaak-nginx.zaakbrug`. Openzaak can't use a single part domain.
    ## @descriptionEnd
    ##
    ## @param zaakbrug.zgw.zakenApi.rootUrl Endpoint for the zaken API.
    ## @param zaakbrug.zgw.zakenApi.authType Options: 'jwt', 'basic', 'value'. 'value' uses the password field of the given authAlias as Authorization header.
    ## @param zaakbrug.zgw.zakenApi.authAlias Reference to an auth alias configured in 'credentials.properties'.
    ## @param zaakbrug.zgw.zakenApi.timeout Set timeout for the zaken API.
    ## @param zaakbrug.zgw.zakenApi.verifyHostname If 'true', the hostname in the certificate will be checked against the actual hostname of the Zaken API.
    ## @param zaakbrug.zgw.zakenApi.allowSelfSignedCertificates If true, self signed certificates are accepted.
    ## @param zaakbrug.zgw.zakenApi.disableCookies Disables the use of cookies, making the calls to zaken API completely stateless.
    ## @param zaakbrug.zgw.zakenApi.ignoreCertificateExpiredException If true, CertificateExpiredExceptions are ignored.
    ## @param zaakbrug.zgw.zakenApi.truststore.uri Resource URL to truststore to be used for authenticating Zaken API. If none specified, the JVMs default truststore will be used.
    ## @extra zaakbrug.zgw.zakenApi.truststore.uri Custom truststores are usually mounted in the container at 'opt/frank/resources'.
    ## @param zaakbrug.zgw.zakenApi.truststore.authAlias Reference to an auth alias configured in 'credentials.properties' used to obtain the truststore password.
    ## @param zaakbrug.zgw.zakenApi.truststore.type Type of truststore. Available options: 'PEM', 'PKCS12', 'JKS', 'JCEKS'.
    ## @extra zaakbrug.zgw.zakenApi.truststore.type 'PEM' is currently only used by the SignaturePipe to use a PEM certificate directly as a truststore.
    ## @param zaakbrug.zgw.catalogiApi.rootUrl Endpoint for the catalogi API.
    ## @param zaakbrug.zgw.catalogiApi.authType Options: 'jwt', 'basic', 'value'. 'value' uses the password field of the given authAlias as Authorization header.
    ## @param zaakbrug.zgw.catalogiApi.authAlias Reference to an auth alias configured in 'credentials.properties'.
    ## @param zaakbrug.zgw.catalogiApi.timeout Set timeout for the catalogi API.
    ## @param zaakbrug.zgw.catalogiApi.verifyHostname If 'true', the hostname in the certificate will be checked against the actual hostname of the catalogi API.
    ## @param zaakbrug.zgw.catalogiApi.allowSelfSignedCertificates If true, self signed certificates are accepted.
    ## @param zaakbrug.zgw.catalogiApi.disableCookies Disables the use of cookies, making the calls to catalogi API completely stateless.
    ## @param zaakbrug.zgw.catalogiApi.ignoreCertificateExpiredException If true, CertificateExpiredExceptions are ignored.
    ## @param zaakbrug.zgw.catalogiApi.truststore.uri Resource URL to truststore to be used for authenticating catalogi API. If none specified, the JVMs default truststore will be used.
    ## @extra zaakbrug.zgw.catalogiApi.truststore.uri Custom truststores are usually mounted in the container at 'opt/frank/resources'.
    ## @param zaakbrug.zgw.catalogiApi.truststore.authAlias Reference to an auth alias configured in 'credentials.properties' used to obtain the truststore password.
    ## @param zaakbrug.zgw.catalogiApi.truststore.type Type of truststore. Available options: 'PEM', 'PKCS12', 'JKS', 'JCEKS'.
    ## @extra zaakbrug.zgw.catalogiApi.truststore.type 'PEM' is currently only used by the SignaturePipe to use a PEM certificate directly as a truststore.
    ## @param zaakbrug.zgw.documentenApi.rootUrl Endpoint for the documenten API.
    ## @param zaakbrug.zgw.documentenApi.authType Options: 'jwt', 'basic', 'value'. 'value' uses the password field of the given authAlias as Authorization header.
    ## @param zaakbrug.zgw.documentenApi.authAlias Reference to an auth alias configured in 'credentials.properties'.
    ## @param zaakbrug.zgw.documentenApi.timeout Set timeout for the documenten API.
    ## @param zaakbrug.zgw.documentenApi.verifyHostname If 'true', the hostname in the certificate will be checked against the actual hostname of the documenten API.
    ## @param zaakbrug.zgw.documentenApi.allowSelfSignedCertificates If true, self signed certificates are accepted.
    ## @param zaakbrug.zgw.documentenApi.disableCookies Disables the use of cookies, making the calls to documenten API completely stateless.
    ## @param zaakbrug.zgw.documentenApi.ignoreCertificateExpiredException If true, CertificateExpiredExceptions are ignored.
    ## @param zaakbrug.zgw.documentenApi.truststore.uri Resource URL to truststore to be used for authenticating documenten API. If none specified, the JVMs default truststore will be used.
    ## @extra zaakbrug.zgw.documentenApi.truststore.uri Custom truststores are usually mounted in the container at 'opt/frank/resources'.
    ## @param zaakbrug.zgw.documentenApi.truststore.authAlias Reference to an auth alias configured in 'credentials.properties' used to obtain the truststore password.
    ## @param zaakbrug.zgw.documentenApi.truststore.type Type of truststore. Available options: 'PEM', 'PKCS12', 'JKS', 'JCEKS'.
    ## @extra zaakbrug.zgw.documentenApi.truststore.type 'PEM' is currently only used by the SignaturePipe to use a PEM certificate directly as a truststore.
    ## @param zaakbrug.zgw.besluitenApi.rootUrl Endpoint for the besluiten API.
    ## @param zaakbrug.zgw.besluitenApi.authType Options: 'jwt', 'basic', 'value'. 'value' uses the password field of the given authAlias as Authorization header.
    ## @param zaakbrug.zgw.besluitenApi.authAlias Reference to an auth alias configured in 'credentials.properties'.
    ## @param zaakbrug.zgw.besluitenApi.timeout Set timeout for the besluiten API.
    ## @param zaakbrug.zgw.besluitenApi.verifyHostname If 'true', the hostname in the certificate will be checked against the actual hostname of the besluiten API.
    ## @param zaakbrug.zgw.besluitenApi.allowSelfSignedCertificates If true, self signed certificates are accepted.
    ## @param zaakbrug.zgw.besluitenApi.disableCookies Disables the use of cookies, making the calls to besluiten API completely stateless.
    ## @param zaakbrug.zgw.besluitenApi.ignoreCertificateExpiredException If true, CertificateExpiredExceptions are ignored.
    ## @param zaakbrug.zgw.besluitenApi.truststore.uri Resource URL to truststore to be used for authenticating besluiten API. If none specified, the JVMs default truststore will be used.
    ## @extra zaakbrug.zgw.besluitenApi.truststore.uri Custom truststores are usually mounted in the container at 'opt/frank/resources'.
    ## @param zaakbrug.zgw.besluitenApi.truststore.authAlias Reference to an auth alias configured in 'credentials.properties' used to obtain the truststore password.
    ## @param zaakbrug.zgw.besluitenApi.truststore.type Type of truststore. Available options: 'PEM', 'PKCS12', 'JKS', 'JCEKS'.
    ## @extra zaakbrug.zgw.besluitenApi.truststore.type 'PEM' is currently only used by the SignaturePipe to use a PEM certificate directly as a truststore.
    ##
    zakenApi:
      rootUrl: "http://open-zaak/zaken/api/v1/"
      authType: jwt
      authAlias: zaken-api.jwt
      timeout: 20000
      verifyHostname: true
      allowSelfSignedCertificates: false
      disableCookies: false
      ignoreCertificateExpiredException: false
      truststore:
        uri: ""
        authAlias: ""
        type: ""
    catalogiApi:
      rootUrl: "http://open-zaak/catalogi/api/v1/"
      authType: jwt
      authAlias: zaken-api.jwt
      timeout: 20000
      verifyHostname: true
      allowSelfSignedCertificates: false
      disableCookies: false
      ignoreCertificateExpiredException: false
      truststore:
        uri: ""
        authAlias: ""
        type: ""
    documentenApi:
      rootUrl: "http://open-zaak/documenten/api/v1/"
      authType: jwt
      authAlias: zaken-api.jwt
      timeout: 20000
      verifyHostname: true
      allowSelfSignedCertificates: false
      disableCookies: false
      ignoreCertificateExpiredException: false
      truststore:
        uri: ""
        authAlias: ""
        type: ""
    besluitenApi:
      rootUrl: "http://open-zaak/besluiten/api/v1/"
      authType: jwt
      authAlias: zaken-api.jwt
      timeout: 20000
      verifyHostname: true
      allowSelfSignedCertificates: false
      disableCookies: false
      ignoreCertificateExpiredException: false
      truststore:
        uri: ""
        authAlias: ""
        type: ""
  ## @section Globals
  ## @param zaakbrug.globals.organizations [array] Map gemeentecode and RSIN
  ## @param zaakbrug.globals.organizations.gemeenteNaam [string] Name for organisation
  ## @param zaakbrug.globals.organizations.gemeenteCode [string] Gemeentecode to map to RSIN
  ## @param zaakbrug.globals.organizations.RSIN [string] RSIN to be mapped to gemeentecode
  ## @skip zaakbrug.globals.rolMapping
  ##
  globals:
    organizations:
      - gemeenteNaam: "Súdwest-Fryslân"
        gemeenteCode: "1900"
        RSIN: "823288444"
    rolMapping:
      heeftBetrekkingOp: "BetrekkingOp"
      heeftAlsBelanghebbende: "Belanghebbende"
      heeftAlsInitiator: "Initiator"
      heeftAlsUitvoerende: "Uitvoerende"
      heeftAlsVerantwoordelijke: "Verantwoordelijke"
      heeftAlsGemachtigde: "Gemachtigde"
      heeftAlsOverigBetrokkene: "OverigeBetrokkene"
  ## @section Profiles
  ## @param zaakbrug.profiles.profile [array] Translation profile, specific per zaakType
  ## @param zaakbrug.profiles.profile.zaakTypeIdentificatie [string] Zaaktype the profile is for
  ## @param zaakbrug.profiles.profile.endCaseEndDate [object, nullable]
  ## @param zaakbrug.profiles.profile.endCaseEndDate.coalesceResultaat [string] Options: `Onbekend`, `Toegekend`
  ## @param zaakbrug.profiles.profile.endDateAndResultLastStatus [object, nullable]
  ## @param zaakbrug.profiles.profile.endDateAndResultLastStatus.coalesceResultaat [string] Options: `Onbekend`, `Toegekend`
  ##
  profiles:
    profile:
      - zaakTypeIdentificatie: "B9999"
        endCaseEndDate:
          coalesceResultaat: "Onbekend"
        endDateAndResultLastStatus:
          coalesceResultaat: "Onbekend"
      - zaakTypeIdentificatie: "B1026"
        endCaseEndDate:
          coalesceResultaat: "Toegekend"

## @section Staging
## @descriptionStart
## Staging is needed if you want to use zgw-to-zds.
##
## Following sections are about configuring OpenZaak (used as staging zaaksysteem) and the API proxy.<br />
## Ref: https://open-zaak.readthedocs.io/en/stable/installation/kubernetes.html
##
## OpenZaak needs a Postgres database with PostGIS<br />
## ref: https://open-zaak.readthedocs.io/en/stable/installation/prerequisites.html#postgresql-with-postgis
## @descriptionEnd

staging:
  ## @param staging.enabled Enable the staging environment
  ##
  enabled: false
  ## @param staging.image.tag Version of OpenZaak
  ##
  image:
    tag: "1.9.0"
  ## @param staging.zakenApi.rootUrl Endpoint of the zaken API of the staging zaaksysteem
  ## @param staging.documentenApi.rootUrl Endpoint of the documenten API of the staging zaaksysteem
  ## @param staging.catalogiApi.rootUrl Endpoint of the catalogi API of the staging zaaksysteem
  ## @param staging.besluitenApi.rootUrl Endpoint of the besluiten API of the staging zaaksysteem
  ##
  zakenApi:
    rootUrl: http://zaakbrug-staging-nginx.zaakbrug/zaken/api/v1/
  documentenApi:
    rootUrl: http://zaakbrug-staging-nginx.zaakbrug/documenten/api/v1/
  catalogiApi:
    rootUrl: http://zaakbrug-staging-nginx.zaakbrug/catalogi/api/v1/
  besluitenApi:
    rootUrl: http://zaakbrug-staging-nginx.zaakbrug/besluiten/api/v1/
  ## @param staging.extraEnvVars [array] Extra environment variables that should be set on the zaaksysteem
  ## @extra staging.extraEnvVars The notifications should be disabled
  ## @param staging.extraEnvVars.name [string] Name of the variable
  ## @param staging.extraEnvVars.value [string, nullable] Value of the variable
  ##
  extraEnvVars:
    - name: NOTIFICATIONS_DISABLED
      value: "yes"
  settings:
    ## @param staging.settings.useXForwardedHost Add `X-Forwarded-Host` to proxy header
    ## @extra staging.settings.useXForwardedHost Leave this to false, so absolute URL's make their way though te reverse proxies.
    ##
    useXForwardedHost: false
    ## @param staging.settings.debug Set the debug mode of the zaaksysteem
    ##
    debug: false
    ## @param staging.settings.allowedHosts Set the (v)hosts that need to be accessible for OpenZaak
    ## @extra staging.settings.allowedHosts Add the ingress route if you have one. Change the service names and include namespace
    ##
    allowedHosts: "zaakbrug-staging.zaakbrug,zaakbrug-staging-nginx.zaakbrug,zaakbrug-staging.zaakbrug.svc.cluster.local,zaakbrug-staging-nginx.svc.cluster.local,localhost"
    ## @param staging.settings.secretKey Secret key that’s used for certain cryptographic utilities. Use [Djecrety](https://djecrety.ir/) to generate one
    ##
    secretKey: ""
    ## @param staging.settings.database.host Host for the database
    ## @param staging.settings.database.port Port for the database
    ## @param staging.settings.database.username User to log in to the database
    ## @param staging.settings.database.password Password for the user
    ## @param staging.settings.database.name Name of the database
    ## @param staging.settings.database.sslmode Configure SSLMode
    ##
    database:
      host: ""
      port: 5432
      username: ""
      password: ""
      name: ""
      sslmode: prefer
  ## @param staging.persistence.enabled Toggle persistence for the staging zaaksysteem
  ## @param staging.persistence.storageClassName Configure which storage class should be used
  ##
  persistence:
    enabled: true
    storageClassName: ""

  apiProxy:
    ## @param staging.apiProxy.nameOverride String to partially override zaakbrug.apiProxyFullname template (will maintain the release name)
    ##
    nameOverride: ""
    ## @param staging.apiProxy.fullnameOverride String to fully override zaakbrug.apiProxyFullname template
    ##
    fullnameOverride: ""
    ## @skip staging.apiProxy.autoscaling
    ##
    autoscaling:
      enabled: false
    ## @param staging.apiProxy.replicaCount Number of API proxy replicas to deploy
    ## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
    ##
    replicaCount: 1
    ## @param staging.apiProxy.podAnnotations Annotations for API proxy pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param staging.apiProxy.podLabels Extra labels for API proxy pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param staging.apiProxy.securityContext [object] Set API proxy container's Security Context
    ## e.g.
    ## securityContext: {}
    ##  capabilities:
    ##    drop:
    ##      - ALL
    ##  readOnlyRootFilesystem: true
    ##  runAsNonRoot: true
    ##  runAsUser: 1000
    ##
    securityContext:
      readOnlyRootFilesystem: true
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    ## API proxy image
    ## ref: https://nexus.frankframework.org/#browse/browse:frankframework-docker:v2%2Ffrankframework%2Ftags/
    ## @param staging.apiProxy.image.registry API proxy image registry
    ## @param staging.apiProxy.image.repository API proxy image repository
    ## @param staging.apiProxy.image.tag API proxy image tag (immutable tags are recommended)
    ##
    image:
      registry: ""
      repository: nginxinc/nginx-unprivileged
      tag: stable
      ## @param staging.apiProxy.image.pullPolicy API proxy image pull policy
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## @param staging.apiProxy.image.pullSecrets API proxy image pull secrets
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## API proxy container's resource requests and limits
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ## @param staging.apiProxy.resources [object] Set the resources for the API proxy containers
    ## @param staging.apiProxy.resources.limits [string] The resources limits for the API proxy containers
    ## @param staging.apiProxy.resources.requests.memory [string] The requested memory for the API proxy containers
    ## @param staging.apiProxy.resources.requests.cpu [string] The requested cpu for the API proxy containers
    ## e.g.:
    ## resources
    ##   limits:
    ##     cpu: 2000m
    ##     memory: 4200M
    ##   requests:
    ##     cpu: 2000m
    ##     memory: 4200M
    ##
    resources: {}
    ## @param staging.apiProxy.existingConfigmap Set the name of an existing config-map to use as configuration for the API proxy
    ##
    existingConfigmap: ''
    ## API proxy service parameters
    ##
    service:
      ## @param staging.apiProxy.service.type API proxy service type
      ##
      type: ClusterIP
      ## @param staging.apiProxy.service.port API proxy service port
      ##
      port: 80
      ## @param staging.apiProxy.service.annotations Annotations for the API proxy service
      ##
      annotations: {}
    ## Configure the ingress resource that allows you to access the API proxy installation
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
    ##
    ingress:
      ## @param staging.apiProxy.ingress.enabled Enable ingress record generation for Frank!
      ##
      enabled: false
      ## @param staging.apiProxy.ingress.className IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)
      ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
      ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
      ##
      className: ""
      ## @param staging.apiProxy.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
      ## For a full list of possible ingress annotations, please see
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
      ## Use this parameter to set the required annotations for cert-manager, see
      ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
      ## e.g:
      ## annotations:
      ##   kubernetes.io/ingress.class: nginx
      ##   kubernetes.io/tls-acme: 'true'
      ##
      annotations: {}
      ## @param staging.apiProxy.ingress.hosts [array] Set hosts for ingress
      ## @param staging.apiProxy.ingress.hosts.host [string] Set hostname
      ## @param staging.apiProxy.ingress.hosts.paths [array] Set multiple paths
      ## @param staging.apiProxy.ingress.hosts.paths.path [string] Set path (context url)
      ## @param staging.apiProxy.ingress.hosts.paths.pathType [string] Set type of path
      ##
      hosts:
        - host: chart-example.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      ## @param staging.apiProxy.ingress.tls [array] Define tls secrets for hosts (implementation not done yet)
      ## e.g.
      ## tls:
      ##   - secretName: chart-example-tls
      ##     hosts:
      ##       - chart-example.local
      ##
      tls: []
