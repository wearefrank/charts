{{- if .Values.staging.enabled -}}
{{- if not .Values.staging.apiProxy.existingConfigmap -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "zaakbrug.apiProxyFullname" . }}
  labels:
    {{- include "zaakbrug.apiProxyLabels" . | nindent 4 }}
data:
  proxy: |
    proxy_pass_header Server;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 300s;
    proxy_read_timeout 300s;
    proxy_set_header Host $http_host;

    proxy_redirect off;
    proxy_pass_request_headers on;
    proxy_pass http://{{ include "zaakbrug.fullname" . }}.{{ .Release.Namespace }}:{{ .Values.service.port }}/api/;
    proxy_http_version 1.1;  # required if you're using istio, otherwise you get HTTP 426 errors
  default.conf: |-
    server {
      listen 8080 default_server;
      server_name {{ .Values.staging.settings.allowedHosts  | replace "," " "}} localhost;
      server_tokens off;

      gzip on;
      gzip_http_version 1.0;
      gzip_comp_level 2;
      gzip_min_length 1100;
      gzip_buffers 4 8k;
      gzip_proxied any;
      gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/json
        application/xml
        application/rss+xml
        font/truetypenginc
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;
      gzip_static on;
      gzip_proxied  expired no-cache no-store private auth;
      gzip_disable "MSIE [1-6]\.";
      gzip_vary on;

      add_header Feature-Policy "autoplay 'none'; camera 'none'" always;
      add_header Referrer-Policy "same-origin";
      add_header X-Content-Type-Options "nosniff";
      add_header X-XSS-Protection "1; mode=block";

      location / {
        client_max_body_size 4G;
        include conf.d/proxy;
      }

      location /_health/ {
        access_log off;
        error_log /tmp/error.log error;
        return 200 'OK';
      }

      error_page  404              /404.html;
      error_page  413              /413.json;
      error_page  500 502 503 504  /500.json;
    }
{{- end -}}
{{- end -}}
